<?php
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);  
/**
* Implements hook_action_info().
*/
function ldiw_activity_action_info() {
  return array(
    'ldiw_activity_log_action' => array(
       'type' => 'ldiw action log',
       'description' => t('Log ldiw user actions'),
       'configurable' => TRUE,
       'hooks' => array(
          'nodeapi' => array('insert', 'update'),
          'user' => array('register', 'login'),
      ),
    )
  );
}
function ldiw_activity_nodeapi(&$node, $op) {
  $fbid = fboauth_fbid_load($node->uid);
  if ($fbid) {
    print_r($node);
  }
}

/**
* Function (ldiw_activity_action_info) action callback.
*/
function ldiw_activity_log_action(&$object, $context = array()) {
  global $user;
  //dsm($user);
  if ($context['hook'] == 'user') {
    switch ($context['op']) {
      case 'login':
        $message = $user->name . ' ' . t('logged in');
      break;
      case 'register':
        $message = $user->name . ' ' . t('joined Lets do it');
        
      break;
    }
  }
  if ($context['hook'] == 'nodeapi'){
    $added_node = $context['node'];
    if (!isset($added_node->nid)) {
      $added_node = $object;
    }
    switch ($context['op']) {
      case 'insert':
        if ($added_node->type != 'ldiw_activity') {
         $message = $user->name . ' ' . t('added wastepoint');
        }
      break;
      case 'update':
        if ($added_node->type != 'ldiw_activity') {
          $message = $user->name . ' ' . t('updated a wastepoint');
        }
      break;
    }
  }
  //dsm($context);
  if (isset($message)) {
    $data['uid'] = $user->uid;
    $data['reference_nid'] = $added_node->nid;
    ldiw_activity_create_entry($data, $context['op'], $message);
  }
}
/**
* @param $data Contain current user uid, longitude and lattitude.
* @param $type Activity type.
* @param $message Activity message.
*/
function ldiw_activity_create_entry($data = array(), $type = '', $message = '') {
  $node = new stdClass();
  $node->title = $message;
  $node->type = "ldiw_activity";
  $node->uid = $data['uid']; 
  // node_object_prepare($node);
  $node->language = ''; // Or e.g. 'en' if locale is enabled
  $node->uid =  $data['uid']; 
  $node->status = 0; //(1 or 0): published or not
  $node->promote = 0; //(1 or 0): promoted to front page
  $node->comment = 1; //2 = comments on, 1 = comments 
  if(!empty($data['lon']) && !empty($data['lat'])) {
    $node->field_coordinates[0]['geo']['lon'] = $data['lon'];
    $node->field_coordinates[0]['geo']['lat'] = $data['lat'];
  }
  if (isset($data['reference_nid'])){
    $node->field_added_node_ref[0]['nid'] = $data['reference_nid'];
  }
  $node->field_event_type[0]['value'] = $type;
  $node = node_submit($node); // Prepare node for saving
  node_save($node);
}
