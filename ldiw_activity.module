<?php

/**
* Implements hook_action_info().
*/
function ldiw_activity_action_info() {
  return array(
    'ldiw_activity_log_action' => array(
       'type' => 'ldiw action log',
       'description' => t('Log ldiw user actions'),
       'configurable' => TRUE,
       'hooks' => array(
          'nodeapi' => array('insert', 'update'),
          'user' => array('register', 'login'),
      ),
    )
  );
}

/**
* Function (ldiw_activity_action_info) action callback.
*/
function ldiw_activity_log_action(&$object, $context = array()) {
  global $user;
  //dsm($user);
  if ($context['hook'] == 'user') {
    switch ($context['op']) {
      case 'login':
        $message = $user->name . ' ' . t('logged in');
      break;
      case 'register':
        $message = $user->name . ' ' . t('joined Lets do it');
        
      break;
    }
  }
  if ($context['hook'] == 'nodeapi'){
    $added_node = $context['node'];
    switch ($context['op']) {
      case 'insert':
        if ($context['node']->type != 'ldiw_activity') {
         $message = $added_node->name . ' ' . t('added wastepoint');
        }
      break;
      case 'update':
        if ($context['node']->type != 'ldiw_activity') {
          $message = $added_node->name . ' ' . t('updated a wastepoint');
        }
      break;
    }
  }
  // Somehow context variable didn't work as I would expect.
  // But the we still have $object variable to use ;).
  //dsm($context);
  /*
  if (isset($object->type) && ) {
    $message = $user->name . ' ' . t('added wastepoint');
    $coordinates = $object->field_coordinates[0]['geo'];
      print_r($object);
  }
  */
  //dsm($context);
  if (isset($message)) {
    $node = new stdClass();
    $node->title = $message;
    $node->type = "ldiw_activity";
    $node->uid = $user->uid; 
    node_object_prepare($node);
    $node->language = ''; // Or e.g. 'en' if locale is enabled
    $node->uid = $added_node->uid; 
    $node->status = 0; //(1 or 0): published or not
    $node->promote = 0; //(1 or 0): promoted to front page
    $node->comment = 1; //2 = comments on, 1 = comments 
    $coords = ldiw_activity_node_coords($added_node->nid);
    // Entity reference field
    $node->field_coords[0]['geo'] = $coords;
   // $node->field_coordinates[0]['geo']['lon'] = 34;
    //dsm($coords);
//    watchdog('test', print_r($coords), $variables = array(), $severity = WATCHDOG_NOTICE, $link = NULL);
    $node->field_added_node_ref[0]['nid'] = $added_node->nid;
    $node = node_submit($node); // Prepare node for saving
    node_save($node);
  }
}

function ldiw_activity_node_coords($nid) {
    global $db_type;
    if ($db_type == 'mysql') {
      $result = db_query("SELECT node.nid AS nid,
            AsText(node_data_field_coords.field_coords_geo) AS pointastext 
             FROM {node} node  LEFT JOIN {content_field_coords} node_data_field_coords 
             ON node.vid = node_data_field_coords.vid 
             WHERE node.nid = %d",
              array($nid));
    } else {
      $result = db_query("SELECT node.nid AS nid,
            st_AsText(node_data_field_coords.field_coords_geo) AS pointastext 
             FROM {node} node  LEFT JOIN {content_field_coords} node_data_field_coords 
             ON node.vid = node_data_field_coords.vid 
             WHERE node.nid = %d",
              array($nid));
    }
  
 return db_fetch_object($result)->pointastext;
}
