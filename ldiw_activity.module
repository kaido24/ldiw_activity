<?php
/**
*  Implements hook_menu().
*/
function ldiw_activity_menu() {
  $items = array();
  $items['user/%/activities.json'] = array(
      'page callback' => 'ldiw_user_activities_view',
      'access callback' => 'ldiw_activity_access',
      'page arguments' => array(1),
      'type' => MENU_CALLBACK,
  );
  $items['user/%/friend_activities.json'] = array(
      'page callback' => 'ldiw_user_friend_activities_view',
      'access callback' => 'ldiw_activity_access',
      'page arguments' => array(1),
      'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
* Read user activity log and create json output.
*/
function ldiw_user_activities_view($uid) {
  $data = db_query("select * from {ldiw_activity} where uid = %d",$uid);
  while ($item = db_fetch_array($data)) {
   $sjon[] = $item;
 }
  print drupal_to_js($sjon);
}

/**
* Menu page callback.
* Read user friend activities and create json output.
*/
function ldiw_user_friend_activities_view($uid) {
  global $user;
  $profile = node_load(array(
    'uid' => $user->uid,
    'type' => 'profile',
  ));
  foreach ($profile->field_fb_friend_id as $key => $val) {
    $ids[] = $val['value'];
  }
  $uids = implode(',', $ids);
  $data = db_query("select * from {ldiw_activity} where uid in (%s)",$uids);
  while ($item = db_fetch_array($data)) {
   $sjon[] = $item;
   //print_r($item);
 }
  print drupal_to_js($sjon);
}

/**
* Implements hook_action_info().
*/
function ldiw_activity_action_info() {
  return array(
    'ldiw_activity_log_action' => array(
       'type' => 'ldiw action log',
       'description' => t('Log ldiw user actions'),
       'configurable' => FALSE,
       'hooks' => array(
         'nodeapi' => array('presave', 'insert', 'update', 'view'),
         'comment' => array('presave', 'insert', 'update', 'view'),
         'user' => array('presave','login', 'register', 'update'),
       )
    )
  );
}

/**
* Function (ldiw_activity_action_info) action callback.
*/
function ldiw_activity_log_action(&$object, $context = array()) {
  global $user;
  $nid = NULL;
  if ($context['hook'] == 'user') {
    switch ($context['op']) {
      case 'login':
      $message = $user->name . ' ' . t('logged in');
      break;
      case 'register':
      $message = $user->name . ' ' . t('joined Lets do it');
      break;
    }
  }
  // Somehow context variable didn't work as I would expect.
  // But the we still have $object variable to use ;).
  if (isset($object->type) && $object->type == 'waste_point') {
    $message = $user->name . ' ' . t('added wastepoint');
    $nid = $object->nid;
    $coordinates = $object->field_coords[0]['geo'];
      print_r($object);
  }
  if (isset($message)) {
    db_query("insert into {ldiw_activity} (uid, time, message, nid) values ( %d, %d, '%s', %d, %s)",  $user->uid, time(), $message, $nid, $coordinates);
  }

}

/**
* Menu ccess callback.
*/
function ldiw_activity_access() {
  global $user;
  return $user->uid > 0 ? TRUE : FALSE;
}